# Project 02
# Servers Infrastrcuture
AWSTemplateFormatVersion: "2010-09-09"
Description: Template for deploying servers of high-available Udagram Web Application

#########################
### Parameter Section ###
#########################
Parameters:
  MyIp:
    Description: My IP to enable SSH only through this IP
    Type: String
  EnvironmentName:
    Description: Environment Name for the infrastructure
    Type: String
  InstanceAMI:
    Description: Instance AMI
    Type: AWS::EC2::Image::Id
  InstanceType:
    Description: Instance Type
    Type: String
  LaunchTemplateVersion:
    Description: Launch Template Version
    Type: String

#########################
### Resources Section ###
#########################
Resources:
  ## Security Groups ##
  # Load Balancer Security Group #
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP to/from load balancer
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-LBSecGroup
      VpcId: !ImportValue
        'Fn::Sub': "${EnvironmentName}-VpcId"
  # Web App Security Group #
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP to/from load balancer & SSH from local IP only
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIp
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-WebAppSecGroup
      VpcId: !ImportValue
        'Fn::Sub': "${EnvironmentName}-VpcId"

  ## IAM Roles ##
  # IAM roles for EC2 instances for S3 ReadOnly #
  S3BucketRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Path: "/"
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-EC2Role"
  # Instance Profile for EC2 #
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: 
        - !Ref S3BucketRole

  # Launch Template #
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: UdagramLaunchTemplate
      LaunchTemplateData:
        ImageId: !Ref InstanceAMI
        InstanceType: !Ref InstanceType
        # KeyName : !Sub "${EnvironmentName}-KeyPair"
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        SecurityGroupIds:
          - !GetAtt WebAppSecurityGroup.GroupId
        BlockDeviceMappings:
          - DeviceName: /dev/sdk
            Ebs:
              VolumeSize: 10
        UserData: 
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install unzip awscli -y
            apt-get install apache2 -y
            systemctl start apache2.service
            cd /var/www/html
            aws s3 cp s3://my-467989809503-bucket/udagram.zip .
            unzip -o udagram.zip

  ## Autoscaling ##
  # Target Group #
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: "/"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-TargetGroup"
      UnhealthyThresholdCount: 5
      VpcId: !ImportValue
        'Fn::Sub': "${EnvironmentName}-VpcId"
  # Autoscaling Group #
  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !Ref LaunchTemplateVersion
      MaxSize: "4"
      MinSize: "2"
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-AutoscalingGroup"
          PropagateAtLaunch: true
      TargetGroupARNs:
        - !Ref TargetGroup
      VPCZoneIdentifier:
        - !ImportValue
          'Fn::Sub': "${EnvironmentName}-PrivateSubnets"

  ## Load Balancer ##
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets: 
        - !ImportValue
          'Fn::Sub': "${EnvironmentName}-PublicSubnetAZ1"
        - !ImportValue
          'Fn::Sub': "${EnvironmentName}-PublicSubnetAZ2"
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-LoadBalancer"
  # Listener #
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
  # Listener Rule #
  LoadBalancerListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - "/"
      ListenerArn: !Ref Listener
      Priority: 1

#######################
### Outputs Section ###
#######################
Outputs:
  LoadBalancerDNS:
    Description: DNS/Public URL of load balancer
    Value:  !Join [ "", [ "http://", !GetAtt LoadBalancer.DNSName ] ]
    Export: 
      Name: !Sub ${EnvironmentName}-DNS